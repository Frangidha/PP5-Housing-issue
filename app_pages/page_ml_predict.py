import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from src.data_management import load_house_prices_data, load_pkl_file
from src.machine_learning.regression_evaluation import (
    regression_performance, regression_evaluation, regression_evaluation_plots
)


def page_ml_predict_body():

    # load pipeline files
    version = 'v1'
    pipeline_clf = load_pkl_file(
        "outputs/ml_pipeline/predict_saleprice/" +
        f"{version}/clf_pipeline_model.pkl"
    )
    sale_price_importance = plt.imread(
        "outputs/ml_pipeline/predict_saleprice/" +
        f"{version}/features_importance.png"
    )
    X_train = pd.read_csv(
        f"outputs/ml_pipeline/predict_saleprice/{version}/X_train.csv")
    X_test = pd.read_csv(
        f"outputs/ml_pipeline/predict_saleprice/{version}/X_test.csv")
    y_train = pd.read_csv(
        f"outputs/ml_pipeline/predict_saleprice/{version}/y_train.csv")
    y_test = pd.read_csv(
        f"outputs/ml_pipeline/predict_saleprice/{version}/y_test.csv")

    st.write("### ML: Predict Sale Price")
    # display pipeline training summary conclusions
    st.info(
        f"*In the context of predicting house sale prices,"
        f"we have developed a robust machine learning pipeline.,\n"
        f"Our primary goal was to achieve a minimum R2 score of 0.75"
        f"*on both the training and test datasets to ensure the."
        f"reliability of our predictions\n"
        f"*After evaluating four different models, "
        f"**it became evident that the GradientBoostingregressor consistently"
        f"** outperformed the others due"
        f"*small difference between test & train sets "
        f" Specifically, this model achieved an R2 score of **0.886** "
        f"on the training data and **0.835** on the test data. \n"
        f"* Based on these results, we refined the pipeline and trained it on "
        f"the best features, ensuring accurate and reliable predictions of "
        f"house sale prices."
    )
    st.write("---")

    # show pipelines
    st.write("* **ML pipeline to predict house sale price**")
    st.write(pipeline_clf)
    st.write("---")

    # show best features
    st.write("* **The features the model was trained and their importance:**")
    st.write(X_train.columns.to_list())
    st.image(sale_price_importance)
    st.write("---")

    # evaluate performance on train and test set
    st.write("### Pipeline Performance")
    regression_performance(X_train=X_train, y_train=y_train,
                           X_test=X_test, y_test=y_test,
                           pipeline=pipeline_clf)
    st.write("---")

    # Plot predicted versus actual sale price for train and test sets
    st.write("**Regression Evaluation plots:**")
    st.write(
        f"* Comparing Predicted and Actual Sale Prices on Train & Test Sets:"
        f"\n \n(*Please note that the plots may take some time to load*)"
    )
    regression_evaluation_plots(X_train=X_train, y_train=y_train,
                                X_test=X_test, y_test=y_test,
                                pipeline=pipeline_clf,
                                alpha_scatter=0.5)

    st.write(
        f"* The visualization provides valuable insights into our predictions."
        f" The blue dots on the plot represent the actual prices, and their"
        f"horizontal position indicates the corresponding predicted prices "
        f"generated by our machine learning pipeline. "
        f"A red line serves as a reference for perfect alignment, "
        f"where predicted and actual prices coincide. \n"
        f"* Upon analyzing the plot, it is evident that the majority of "
        f"Analyzing the plot, we observe a strong correlation as  "
        f"the majority of the blue dots closely follow the red line "
        f"This alignment demonstrates the ML pipeline's effectiveness "
        f"in accurately predicting sale prices, reflecting a robust "
        f"relationship between our predictions and the actual values. "
        f"It underscores the pipeline's capacity to make accurate predictions "
        f"regarding house sale prices, showcasing its reliable performance."
    )
